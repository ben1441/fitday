// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview An AI agent that suggests alternative exercises for a workout plan.
 *
 * - suggestExercises - A function that generates exercise suggestions based on user preferences and workout history.
 * - SuggestExercisesInput - The input type for the suggestExercises function.
 * - SuggestExercisesOutput - The return type for the suggestExercises function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestExercisesInputSchema = z.object({
  userPreferences: z
    .string()
    .describe('The user preferences and goals for their workout routine.'),
  workoutHistory: z
    .string()
    .describe(
      'A description of the users prior workout history, including exercises, sets, reps, and notes about their experience.'
    ),
  userType: z
    .string()
    .describe(
      'A description of the user type. Examples include: age, gender, fitness goals, experience level, etc.'
    ),
});
export type SuggestExercisesInput = z.infer<typeof SuggestExercisesInputSchema>;

const SuggestExercisesOutputSchema = z.object({
  suggestedExercises: z
    .string()
    .describe(
      'A list of suggested exercises, including name, sets, reps, and notes, optimized based on user preferences, workout history, and user type.'
    ),
});
export type SuggestExercisesOutput = z.infer<typeof SuggestExercisesOutputSchema>;

export async function suggestExercises(input: SuggestExercisesInput): Promise<SuggestExercisesOutput> {
  return suggestExercisesFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestExercisesPrompt',
  input: {schema: SuggestExercisesInputSchema},
  output: {schema: SuggestExercisesOutputSchema},
  prompt: `You are an expert fitness trainer who suggests alternative exercises to users for their workout plans.

  Consider the user's preferences, workout history, and user type to provide personalized and effective exercise suggestions.

  Preferences: {{{userPreferences}}}
  Workout History: {{{workoutHistory}}}
  User Type: {{{userType}}}

  Suggest a list of alternative exercises:
  `,
});

const suggestExercisesFlow = ai.defineFlow(
  {
    name: 'suggestExercisesFlow',
    inputSchema: SuggestExercisesInputSchema,
    outputSchema: SuggestExercisesOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
